package Server;

import java.io.File;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import java.util.LinkedList;
import javax.swing.SwingWorker;
import MyPackage.RecIntegral;

public class Frame extends javax.swing.JFrame {
    private final FileManager fileManager = new FileManager(this);
    LinkedList<RecIntegral> listRecIntegral = new LinkedList<>();
    private ServerApp serverApp;
    /**
     * Creates new form Frame
     */
    public Frame() {
        initComponents();
    }
    
    public Frame(ServerApp serverApp) {
        this.serverApp = serverApp;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label1 = new java.awt.Label();
        label2 = new java.awt.Label();
        label3 = new java.awt.Label();
        jTextFieldSH = new javax.swing.JTextField();
        jTextFieldNG = new javax.swing.JTextField();
        jTextFieldVG = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButtonDel = new javax.swing.JButton();
        jButtonRes = new javax.swing.JButton();
        jButtonAdd = new javax.swing.JButton();
        jButtonClearTable = new javax.swing.JButton();
        jButtonFillTable = new javax.swing.JButton();
        bSaveObjectTextFormat = new javax.swing.JButton();
        bLoadObjectTextFormat = new javax.swing.JButton();
        bSaveObjectSerBinFormat = new javax.swing.JButton();
        bLoadObjectSerBinFormat = new javax.swing.JButton();
        textTXT = new java.awt.Label();
        textSer = new java.awt.Label();
        textExtern = new java.awt.Label();
        bSaveObjecExternBinFormat = new javax.swing.JButton();
        bLoadObjecExterntBinFormat = new javax.swing.JButton();
        textExtern1 = new java.awt.Label();
        bSaveJsonFormat = new javax.swing.JButton();
        bLoadJsonFormat = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        label1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        label1.setText("Нижняя граница");

        label2.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        label2.setText("Ширина шага");

        label3.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        label3.setText("Верхняя граница");

        jTextFieldSH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSHActionPerformed(evt);
            }
        });

        jTextFieldNG.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jTextFieldNG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNGActionPerformed(evt);
            }
        });

        jTextFieldVG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldVGActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {},
            new String [] {
                "Нижняя граница", "Верхняя граница", "Шаг", "Результат"
            }
        ));
        jTable1.setRowSelectionAllowed(false);
        jTable1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jTable1AncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setHeaderValue("Нижняя граница");
            jTable1.getColumnModel().getColumn(1).setHeaderValue("Верхняя граница");
            jTable1.getColumnModel().getColumn(2).setHeaderValue("Шаг");
            jTable1.getColumnModel().getColumn(3).setHeaderValue("Результат");
        }

        jButtonDel.setText("Удалить");
        jButtonDel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonDelMouseClicked(evt);
            }
        });
        jButtonDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDelActionPerformed(evt);
            }
        });

        jButtonRes.setText("Вычислить");
        jButtonRes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonResMouseClicked(evt);
            }
        });
        jButtonRes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonResActionPerformed(evt);
            }
        });

        jButtonAdd.setText("Добавить");
        jButtonAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonAddMouseClicked(evt);
            }
        });
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });

        jButtonClearTable.setText("Очистить");
        jButtonClearTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClearTableMouseClicked(evt);
            }
        });
        jButtonClearTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClearTableActionPerformed(evt);
            }
        });

        jButtonFillTable.setText("Заполнить");
        jButtonFillTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonFillTableMouseClicked(evt);
            }
        });
        jButtonFillTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFillTableActionPerformed(evt);
            }
        });

        bSaveObjectTextFormat.setText("Сохранить");
        bSaveObjectTextFormat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bSaveObjectTextFormatMouseClicked(evt);
            }
        });
        bSaveObjectTextFormat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSaveObjectTextFormatActionPerformed(evt);
            }
        });

        bLoadObjectTextFormat.setText("Загрузить");
        bLoadObjectTextFormat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bLoadObjectTextFormatMouseClicked(evt);
            }
        });
        bLoadObjectTextFormat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bLoadObjectTextFormatActionPerformed(evt);
            }
        });

        bSaveObjectSerBinFormat.setText("Сохранить");
        bSaveObjectSerBinFormat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bSaveObjectSerBinFormatMouseClicked(evt);
            }
        });
        bSaveObjectSerBinFormat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSaveObjectSerBinFormatActionPerformed(evt);
            }
        });

        bLoadObjectSerBinFormat.setText("Загрузить");
        bLoadObjectSerBinFormat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bLoadObjectSerBinFormatMouseClicked(evt);
            }
        });
        bLoadObjectSerBinFormat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bLoadObjectSerBinFormatActionPerformed(evt);
            }
        });

        textTXT.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        textTXT.setText("В текстовом виде");

        textSer.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        textSer.setText("C сериализацией");

        textExtern.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        textExtern.setText("C экстернализацией");

        bSaveObjecExternBinFormat.setText("Сохранить");
        bSaveObjecExternBinFormat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bSaveObjecExternBinFormatMouseClicked(evt);
            }
        });
        bSaveObjecExternBinFormat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSaveObjecExternBinFormatActionPerformed(evt);
            }
        });

        bLoadObjecExterntBinFormat.setText("Загрузить");
        bLoadObjecExterntBinFormat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bLoadObjecExterntBinFormatMouseClicked(evt);
            }
        });
        bLoadObjecExterntBinFormat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bLoadObjecExterntBinFormatActionPerformed(evt);
            }
        });

        textExtern1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        textExtern1.setText("С json");

        bSaveJsonFormat.setText("Сохранить");
        bSaveJsonFormat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bSaveJsonFormatMouseClicked(evt);
            }
        });
        bSaveJsonFormat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSaveJsonFormatActionPerformed(evt);
            }
        });

        bLoadJsonFormat.setText("Загрузить");
        bLoadJsonFormat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bLoadJsonFormatMouseClicked(evt);
            }
        });
        bLoadJsonFormat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bLoadJsonFormatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(label2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldVG, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldNG, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldSH, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(527, 527, 527)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButtonRes, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jButtonAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButtonClearTable, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButtonDel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButtonFillTable, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(bSaveObjectTextFormat)
                                        .addGap(18, 18, 18)
                                        .addComponent(bLoadObjectTextFormat))
                                    .addComponent(textTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(textSer, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(bSaveObjectSerBinFormat)
                                        .addGap(18, 18, 18)
                                        .addComponent(bLoadObjectSerBinFormat)))
                                .addGap(12, 12, 12)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(bSaveObjecExternBinFormat)
                                        .addGap(18, 18, 18)
                                        .addComponent(bLoadObjecExterntBinFormat))
                                    .addComponent(textExtern, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(bSaveJsonFormat)
                                        .addGap(18, 18, 18)
                                        .addComponent(bLoadJsonFormat))
                                    .addComponent(textExtern1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(10, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldNG, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldVG, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldSH, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButtonAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonDel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonRes, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16)
                        .addComponent(jButtonClearTable, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonFillTable, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(textExtern1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bSaveJsonFormat, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bLoadJsonFormat, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(textExtern, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(bSaveObjecExternBinFormat, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(bLoadObjecExterntBinFormat, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(bLoadObjectSerBinFormat, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(textTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(textSer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(bSaveObjectSerBinFormat, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(bSaveObjectTextFormat, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bLoadObjectTextFormat, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        textExtern.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void jTextFieldSHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSHActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jTextFieldSHActionPerformed

    private void jTextFieldNGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNGActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jTextFieldNGActionPerformed

    private void jTextFieldVGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldVGActionPerformed
        // TODO add your handling code here:    
        
    }//GEN-LAST:event_jTextFieldVGActionPerformed

    private void jButtonDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonDelActionPerformed

    private void jTable1AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jTable1AncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1AncestorAdded

    private void jButtonDelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonDelMouseClicked
        // TODO add your handling code here:
        if(jTable1.getRowCount() != 0)
        {
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            
            int selectRow = jTable1.getSelectedRow();
            if(selectRow == -1) return;
            model.removeRow(selectRow);
        }
    }//GEN-LAST:event_jButtonDelMouseClicked
    
    private void jButtonResMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonResMouseClicked
        // TODO add your handling code here:
        if (jTable1.getRowCount() == 0) return;
        int selectRow = jTable1.getSelectedRow();
        if (selectRow == -1) return;

        try {
            RecIntegral data = InputValidator.validateAndParse(
                jTable1.getValueAt(selectRow, 0).toString(),
                jTable1.getValueAt(selectRow, 1).toString(),
                jTable1.getValueAt(selectRow, 2).toString()
            );

            new SwingWorker<Double, Void>() {
                @Override
                protected Double doInBackground() {
                    return serverApp.distributeTasks(data.getLowLim(), data.getUpLim(), data.getWidthLim());
                }

                @Override
                protected void done() {
                    try {
                        double result = get();
                        jTable1.setValueAt(result, selectRow, 3);
                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                }
            }.execute();
        } catch (StepException ex) {
            javax.swing.JOptionPane.showMessageDialog(
                this,
                ex.getMessage() + "\nЗначение шага: " + ex.getStepValue(),
                "Ошибка",
                javax.swing.JOptionPane.ERROR_MESSAGE
            );
        } catch (DataException ex) {
            javax.swing.JOptionPane.showMessageDialog(
                this,
                ex.getMessage(),
                "Ошибка",
                javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonResMouseClicked

    private void jButtonAddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonAddMouseClicked
        // TODO add your handling code here:
        try{
            RecIntegral data = InputValidator.validateAndParse(
                jTextFieldNG.getText(),
                jTextFieldVG.getText(),
                jTextFieldSH.getText()
            );
            
            ((DefaultTableModel) jTable1.getModel()).addRow(
                new Object[]{data.getLowLim(), data.getUpLim(), data.getWidthLim()}
            );
        } catch (StepException ex) {
            javax.swing.JOptionPane.showMessageDialog(
                this,
                ex.getMessage() + "\nЗначение шага: " + ex.getStepValue(),
                "Ошибка",
                javax.swing.JOptionPane.ERROR_MESSAGE
            );
        } catch(DataException ex){
            javax.swing.JOptionPane.showMessageDialog(this,
            ex.getMessage(),
            "Ошибка",
            javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonAddMouseClicked

    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonAddActionPerformed

    private void jButtonClearTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonClearTableMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        int count = model.getRowCount();
        for (int i = 0; i < count; i++) {
            double lowLim = (double) model.getValueAt(i, 0);
            double upLim = (double) model.getValueAt(i, 1);
            double widthLim = (double) model.getValueAt(i, 2);
            double resIntegral;
            Object value = model.getValueAt(i, 3);
            if (value instanceof Number) {
                resIntegral = ((Number) value).doubleValue();
            } else {
                resIntegral = Double.MAX_VALUE;
            }
            RecIntegral dataIntegral = new RecIntegral(lowLim, upLim, widthLim, resIntegral);
            listRecIntegral.add(dataIntegral);
        }
        model.setRowCount(0);
    }//GEN-LAST:event_jButtonClearTableMouseClicked

    private void jButtonResActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonResActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonResActionPerformed

    private void jButtonFillTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonFillTableMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        for(RecIntegral dataRow : listRecIntegral) {
            double lowLim = dataRow.getLowLim();
            double upLim = dataRow.getUpLim();
            double widthLim = dataRow.getWidthLim();
            if (dataRow.getResIntegral() == Double.MAX_VALUE) {
                model.addRow(new Object[]{lowLim, upLim, widthLim});
            }
            else {
                double resIntegral = dataRow.getResIntegral();
                model.addRow(new Object[]{lowLim, upLim, widthLim, resIntegral});
            }
        }
        listRecIntegral.clear();
    }//GEN-LAST:event_jButtonFillTableMouseClicked

    private void jButtonFillTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFillTableActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonFillTableActionPerformed

    private void jButtonClearTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonClearTableActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonClearTableActionPerformed

    private void bSaveObjectTextFormatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bSaveObjectTextFormatMouseClicked
        // TODO add your handling code here:
        File file = fileManager.getPathTXTFileToSaved();
        if (file == null) return;
        ArrayList<RecIntegral> arrTableData = getDataArrListFromTable();
        SavedState state = new SavedState(listRecIntegral, arrTableData);
        fileManager.saveToTextFile(file, state);
    }//GEN-LAST:event_bSaveObjectTextFormatMouseClicked

    private void bSaveObjectTextFormatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSaveObjectTextFormatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bSaveObjectTextFormatActionPerformed

    private void bLoadObjectTextFormatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bLoadObjectTextFormatMouseClicked
        // TODO add your handling code here:
        File file = fileManager.getPathTXTFileToLoad();
        if (file == null) return;
        SavedState state = fileManager.loadFromTextFile(file);
        if (state != null) {
            listRecIntegral = state.getListRecIntegral();
            setDataToTable(state.getArrListTableData());
        }
    }//GEN-LAST:event_bLoadObjectTextFormatMouseClicked

    private void bLoadObjectTextFormatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bLoadObjectTextFormatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bLoadObjectTextFormatActionPerformed

    private ArrayList<RecIntegral> getDataArrListFromTable() {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        int count = model.getRowCount();
        ArrayList<RecIntegral> data = new ArrayList<>();
        for (int i = 0; i < count; i++) {
            double lowLim = (double) model.getValueAt(i, 0);
            double upLim = (double) model.getValueAt(i, 1);
            double widthLim = (double) model.getValueAt(i, 2);
            double resIntegral;
            Object value = model.getValueAt(i, 3);
            if (value instanceof Number) {
                resIntegral = ((Number) value).doubleValue();
            } else {
                resIntegral = Double.MAX_VALUE;
            }
            data.add(new RecIntegral(lowLim, upLim, widthLim, resIntegral));
        }
        return data;
    }

    private void setDataToTable(ArrayList<RecIntegral> data) {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        for (RecIntegral row : data) {
            if (row.getResIntegral() == Double.MAX_VALUE) {
                model.addRow(new Object[]{row.getLowLim(), row.getUpLim(), row.getWidthLim()});
            } else {
                model.addRow(new Object[]{row.getLowLim(), row.getUpLim(), row.getWidthLim(), row.getResIntegral()});
            }
        }
    }
    
    private void bSaveObjectSerBinFormatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bSaveObjectSerBinFormatMouseClicked
        // TODO add your handling code here:
        File file = fileManager.getPathSerFileToSaved();
        if (file == null) return;
        
        ArrayList<RecIntegral> arrTableData = getDataArrListFromTable();
        SavedState state = new SavedState(listRecIntegral, arrTableData);
        fileManager.saveToBinaryFile(file, state);
    }//GEN-LAST:event_bSaveObjectSerBinFormatMouseClicked

    private void bSaveObjectSerBinFormatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSaveObjectSerBinFormatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bSaveObjectSerBinFormatActionPerformed

    private void bLoadObjectSerBinFormatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bLoadObjectSerBinFormatMouseClicked
        // TODO add your handling code here:
        File file = fileManager.getPathSerFileToLoad();
        if (file == null) return;
        SavedState state = fileManager.loadFromBinaryFile(file);
        if (state != null) {
            listRecIntegral = state.getListRecIntegral();
            setDataToTable(state.getArrListTableData());
        }
    }//GEN-LAST:event_bLoadObjectSerBinFormatMouseClicked

    private void bLoadObjectSerBinFormatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bLoadObjectSerBinFormatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bLoadObjectSerBinFormatActionPerformed

    private void bSaveObjecExternBinFormatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bSaveObjecExternBinFormatMouseClicked
        // TODO add your handling code here:
        File file = fileManager.getPathExternFileToSaved();
        if (file == null) return;
        
        ArrayList<RecIntegral> arrTableData = getDataArrListFromTable();
        SavedStateExtern state = new SavedStateExtern(listRecIntegral, arrTableData);
        fileManager.saveToBinaryExternFile(file, state);
    }//GEN-LAST:event_bSaveObjecExternBinFormatMouseClicked

    private void bSaveObjecExternBinFormatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSaveObjecExternBinFormatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bSaveObjecExternBinFormatActionPerformed

    private void bLoadObjecExterntBinFormatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bLoadObjecExterntBinFormatMouseClicked
        // TODO add your handling code here:
        File file = fileManager.getPathExternFileToLoad();
        if (file == null) return;
        SavedStateExtern state = fileManager.loadFromBinaryExternFile(file);
        if (state != null) {
            listRecIntegral = state.getListRecIntegral();
            setDataToTable(state.getArrListTableData());
        }
    }//GEN-LAST:event_bLoadObjecExterntBinFormatMouseClicked

    private void bLoadObjecExterntBinFormatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bLoadObjecExterntBinFormatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bLoadObjecExterntBinFormatActionPerformed

    private void bSaveJsonFormatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bSaveJsonFormatMouseClicked
        // TODO add your handling code here:
        File file = fileManager.getPathJsonFileToSaved();
        if (file == null) return;
        
        ArrayList<RecIntegral> arrTableData = getDataArrListFromTable();
        SavedState state = new SavedState(listRecIntegral, arrTableData);
        fileManager.saveToJsonFile(file, state);
    }//GEN-LAST:event_bSaveJsonFormatMouseClicked

    private void bSaveJsonFormatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSaveJsonFormatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bSaveJsonFormatActionPerformed

    private void bLoadJsonFormatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bLoadJsonFormatMouseClicked
        // TODO add your handling code here:
        File file = fileManager.getPathJsonFileToLoad();
        if (file == null) return;
        SavedState state = fileManager.loadFromJsonFile(file);
        if (state != null) {
            listRecIntegral = state.getListRecIntegral();
            setDataToTable(state.getArrListTableData());
        }
    }//GEN-LAST:event_bLoadJsonFormatMouseClicked

    private void bLoadJsonFormatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bLoadJsonFormatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bLoadJsonFormatActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bLoadJsonFormat;
    private javax.swing.JButton bLoadObjecExterntBinFormat;
    private javax.swing.JButton bLoadObjectSerBinFormat;
    private javax.swing.JButton bLoadObjectTextFormat;
    private javax.swing.JButton bSaveJsonFormat;
    private javax.swing.JButton bSaveObjecExternBinFormat;
    private javax.swing.JButton bSaveObjectSerBinFormat;
    private javax.swing.JButton bSaveObjectTextFormat;
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonClearTable;
    private javax.swing.JButton jButtonDel;
    private javax.swing.JButton jButtonFillTable;
    private javax.swing.JButton jButtonRes;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldNG;
    private javax.swing.JTextField jTextFieldSH;
    private javax.swing.JTextField jTextFieldVG;
    private java.awt.Label label1;
    private java.awt.Label label2;
    private java.awt.Label label3;
    private java.awt.Label textExtern;
    private java.awt.Label textExtern1;
    private java.awt.Label textSer;
    private java.awt.Label textTXT;
    // End of variables declaration//GEN-END:variables
}